<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="dev-master@c4055cf0d03d9df471fc6761e732550c633088c1">
  <file src="../src/Psl/Async/KeyedSemaphore.php">
    <PossiblyNullReference>
      <code><![CDATA[resume]]></code>
    </PossiblyNullReference>
  </file>
  <file src="../src/Psl/Async/Scheduler.php">
    <MissingThrowsDocblock>
      <code><![CDATA[run]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="../src/Psl/Async/all.php">
    <InvalidIterator>
      <code><![CDATA[Awaitable::iterate($awaitables)]]></code>
    </InvalidIterator>
  </file>
  <file src="../src/Psl/Async/any.php">
    <InvalidIterator>
      <code><![CDATA[Awaitable::iterate($awaitables)]]></code>
    </InvalidIterator>
  </file>
  <file src="../src/Psl/Async/first.php">
    <InvalidIterator>
      <code><![CDATA[Awaitable::iterate($awaitables)]]></code>
    </InvalidIterator>
  </file>
  <file src="../src/Psl/Collection/MutableVector.php">
    <InvalidReturnStatement>
      <code><![CDATA[Iter\Iterator::create($this->elements)]]></code>
      <code><![CDATA[MutableVector::fromArray(array_keys($this->elements))]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[Iter\Iterator<int, T>]]></code>
      <code><![CDATA[MutableVector<int>]]></code>
    </InvalidReturnType>
  </file>
  <file src="../src/Psl/Collection/Vector.php">
    <InvalidReturnStatement>
      <code><![CDATA[Iter\Iterator::create($this->elements)]]></code>
      <code><![CDATA[self::fromArray(array_keys($this->elements))]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[Iter\Iterator<int, T>]]></code>
      <code><![CDATA[Vector<int>]]></code>
    </InvalidReturnType>
  </file>
  <file src="../src/Psl/Encoding/Hex/decode.php">
    <FalsableReturnStatement>
      <code><![CDATA[hex2bin($hexadecimal)]]></code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType>
      <code><![CDATA[string]]></code>
    </InvalidFalsableReturnType>
  </file>
  <file src="../src/Psl/Filesystem/canonicalize.php">
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[realpath($path)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="../src/Psl/IO/ReadHandleConvenienceMethodsTrait.php">
    <MixedArgument>
      <code><![CDATA[Str\format(
                    "Reached timeout before %s data could be read.",
                    ($data->value === '') ? 'any' : 'all',
                )]]></code>
      <code><![CDATA[Str\format(
                "%d bytes were requested, but only able to read %d bytes",
                $size,
                $length,
            )]]></code>
    </MixedArgument>
    <UndefinedFunction>
      <code><![CDATA[Str\format(
                    "Reached timeout before %s data could be read.",
                    ($data->value === '') ? 'any' : 'all',
                )]]></code>
      <code><![CDATA[Str\format(
                "%d bytes were requested, but only able to read %d bytes",
                $size,
                $length,
            )]]></code>
    </UndefinedFunction>
  </file>
  <file src="../src/Psl/IO/WriteHandleConvenienceMethodsTrait.php">
    <MixedArgument>
      <code><![CDATA[Str\format(
                    "Reached timeout before %s data could be written.",
                    ($written->value === 0) ? 'any' : 'all',
                )]]></code>
      <code><![CDATA[Str\format(
                "asked to write %d bytes, but only able to write %d bytes",
                $original_size,
                $original_size - strlen($bytes),
            )]]></code>
    </MixedArgument>
    <UndefinedFunction>
      <code><![CDATA[Str\format(
                    "Reached timeout before %s data could be written.",
                    ($written->value === 0) ? 'any' : 'all',
                )]]></code>
      <code><![CDATA[Str\format(
                "asked to write %d bytes, but only able to write %d bytes",
                $original_size,
                $original_size - strlen($bytes),
            )]]></code>
    </UndefinedFunction>
  </file>
  <file src="../src/Psl/Iter/random.php">
    <TypeDoesNotContainType>
      <code><![CDATA[$size === 0]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="../src/Psl/Json/encode.php">
    <FalsableReturnStatement>
      <code><![CDATA[$json]]></code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType>
      <code><![CDATA[string]]></code>
    </InvalidFalsableReturnType>
  </file>
  <file src="../src/Psl/Network/Internal/socket_connect.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$socket]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="../src/Psl/Shell/stream_unpack.php">
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$headers['size']]]></code>
      <code><![CDATA[$headers['type']]]></code>
    </PossiblyInvalidArrayAccess>
  </file>
  <file src="../src/Psl/Shell/unpack.php">
    <InvalidIterator>
      <code><![CDATA[stream_unpack($content)]]></code>
    </InvalidIterator>
  </file>
  <file src="../src/Psl/Str/convert_encoding.php">
    <FalsableReturnStatement>
      <code><![CDATA[mb_convert_encoding($string, $to_encoding->value, $from_encoding->value)]]></code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType>
      <code><![CDATA[string]]></code>
    </InvalidFalsableReturnType>
  </file>
  <file src="../src/Psl/Str/detect_encoding.php">
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[mb_detect_encoding($string, $encoding_list, true)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="../src/Psl/Str/ord.php">
    <FalsableReturnStatement>
      <code><![CDATA[mb_ord($character, $encoding->value)]]></code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType>
      <code><![CDATA[int]]></code>
    </InvalidFalsableReturnType>
  </file>
  <file src="../src/Psl/Str/replace_ci.php">
    <PossiblyFalseArgument>
      <code><![CDATA[preg_split('{' . preg_quote($needle, '/') . '}iu', $haystack)]]></code>
    </PossiblyFalseArgument>
  </file>
  <file src="../src/Psl/Str/trim.php">
    <InvalidNullableReturnType>
      <code><![CDATA[string]]></code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[preg_replace("{^[{$char_mask}]++|[{$char_mask}]++$}uD", '', $string)]]></code>
    </NullableReturnStatement>
  </file>
  <file src="../src/Psl/Str/trim_left.php">
    <InvalidNullableReturnType>
      <code><![CDATA[string]]></code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[preg_replace("{^[{$char_mask}]++}uD", '', $string)]]></code>
    </NullableReturnStatement>
  </file>
  <file src="../src/Psl/Str/trim_right.php">
    <InvalidNullableReturnType>
      <code><![CDATA[string]]></code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[preg_replace("{[{$char_mask}]++$}uD", '', $string)]]></code>
    </NullableReturnStatement>
  </file>
  <file src="../src/Psl/Vec/reverse.php">
    <TypeDoesNotContainType>
      <code><![CDATA[0 === $size]]></code>
    </TypeDoesNotContainType>
  </file>
</files>
